# NFS(Network File System)
NFSはネットワーク越にファイルシステムを共有するための技術。
複数のコンピュータから同じファイルシステムにアクセスできるようになり、あたかもローカルディスクのように遠隔のファイルを読み書きが可能となる技術。

## NFSの仕組み
NFSではサーバーとクライアントに分かれている。

サーバー側が共有したいディレクトリ（フォルダ）をエクスポート（公開）する。
クライアント側はNFSサーバーにネットワーク経由で接続し、そのエクスポートされたディレクトリを自分のローカルファイルシステムの一部としてマウントする。
マウント後は、クライアントのアプリケーションから見ると、そのディレクトリ内のファイルを通常のローカルファイルと同じように扱うことができる。
OSのカーネルがNFSプロトコルを使ってファイル操作（読み書き、作成、削除など）の要求をネットワーク経由でサーバーに送り、サーバー側で実際のディスク操作が行われる。

NFSにはバージョンがいくつかあり、現在よく使われるのはNFSv3とNFSv4系列。
NFSv3はシンプルで広く実装されており、NFSv4ではセキュリティ強化（認証や暗号化のサポート）やファイアウォール越えしやすい設計（通信ポートを2049番に集約）などの改良が加えられている。
ただし、NFSv4はサーバー・クライアント間の状態管理を行うため実装がやや複雑。
一般的な用途では細かいバージョンの違いを意識せず使われることも多いが、環境に応じて適切なバージョンが選択される。

## パブリッククラウドのNFSサービス
### GCPにおけるNFSサービス（Cloud Filestore）
Google Cloud Platform (GCP) では、NFS相当の機能を提供するマネージドサービスとしてCloud Filestoreがある。
Cloud Filestoreはその名の通りクラウド上のファイルサーバーで、裏側でNFSプロトコルによる共有ストレージを提供。
ユーザーは自分でサーバーを構築・管理する必要はなく、必要な容量や性能に応じてFilestoreインスタンスを作成し、NFSでマウントして利用することができる。

なお、Cloud Filestore自体はリージョン内の特定ゾーンに作成する従来型（Basic）だと単一ゾーン障害に対して弱い。
一方、近年提供されたEnterprise Tierではリージョン内で複数ゾーンにデータをレプリケーションし高可用性を実現している。
つまり、用途に応じてコストと可用性のバランスを選べるようになっている。GCPでNFSが必要な場合、基本的にはこのFilestoreサービス一択。

主なCloud Filestoreのポイント

|項目|内容|
|:----|:----|
|対応プロトコル|NFSv3、NFSv4.1に対応。標準NFSクライアントでマウント可能。NFSv4.1は認証・暗号化に強いが、NFSv3も広く利用される。|
|クラウド統合|Compute Engine（VM）、GKE（Pod）からマウント可能。例: FilestoreをPersistentVolumeとしてPodにアタッチし、複数Podで共有ディレクトリを利用。|
|性能オプション|容量とパフォーマンスTier（Standard、Premium、High Scale SSD、Enterpriseなど）を指定して作成。SSD構成やスループット/IOPS拡張が可能。|
|利用例|GKEのPodで共有ディレクトリを利用。オンプレのNFSサーバーをクラウドに置き換える形で利用できる。|

### AWSにおけるNFSサービス（Amazon EFSとFSx）
EFSはシンプルなNFS共有、FSxはエンタープライズや特殊用途に向けたオプション、という位置づけ。

#### EFS
AWSでは、NFSに相当するマネージドサービスとしてAmazon EFS (Elastic File System)が提供されている。
EFSはクラウド内で簡単に共有ファイルストレージを利用できるサービスで、NFSサーバーの設定や管理を意識せずに使えるよう設計されている。

Amazon EFSの主な特徴:

|項目|内容|
|:----|:----|
|対応プロトコル|NFS v4.0 / v4.1 をサポート（NFSv3は非対応）。Linux標準のNFSクライアントでマウント可能。Amazon Linuxなど主要ディストリにはNFSクライアント同梱。|
|同時アクセスと統合|複数のEC2、ECSタスク、EKS Podから同時アクセス可能。リージョン内でマルチAZ冗長化され高可用性。どのAZからも共通のパスでアクセス可能。|
|自動スケーリング|容量指定不要。保存データ量に応じて自動拡張／縮小。課金は実際の使用容量ベース。性能もモード選択により自動調整され、サーバーレス的に利用可能。|
|利用例|ECSの複数コンテナでログを共有する用途。EFSをボリュームとしてマウントすることで、別ホスト上のコンテナからも同じログファイルにアクセス可能。オンプレNASの置き換えとして利用できる。|

AWSでは、EFSに加えて「Amazon FSx」というマネージドファイルストレージ群が用意されている。
これは既存のファイルシステム技術をクラウド上で再現したもので、用途に応じて選択できる。

#### Amazon FSx for NetApp ONTAP
|項目|内容|
|:----|:----|
|対応プロトコル|NFS、SMB両方をサポート|
|特徴|NetApp ONTAPをAWSでマネージド提供。スナップショット、重複排除、レプリケーションなどエンタープライズNASの高度機能を利用可能。|
|利用例|オンプレでNetAppを使っていた企業が、クラウドに移行後も同等のNAS機能を利用したい場合に最適。|

#### Amazon FSx for OpenZFS
|項目|内容|
|:----|:----|
|対応プロトコル|NFS（主にv3/v4）|
|特徴|オープンソースのZFSをベースに提供。チェックサムによるデータ整合性保証、スナップショット、クローン作成が可能。低レイテンシと高スループットを両立。|
|利用例|分析基盤やデータ処理ワークロードで、一貫性と性能を両立させたいケース。|

#### Amazon FSx for Lustre
|項目|内容|
|:----|:----|
|対応プロトコル|Lustre専用クライアントで接続（一般的なNFSとは異なる）|
|特徴|HPC向けの並列ファイルシステム。大規模データに対して超高速スループットを発揮。S3との連携も可能。|
|利用例|機械学習の大規模トレーニングやシミュレーションなど、HPCワークロード。|

#### Amazon FSx for Windows File Server
|項目|内容|
|:----|:----|
|対応プロトコル|SMB|
|特徴|Windows Serverベースのマネージドファイル共有。Active Directory連携やNTFSアクセス制御を利用可能。|
|利用例|Windows環境でのファイルサーバーをクラウドに移行したい場合。|

### FUSEとの比較
クラウド環境で共有ストレージを扱うとき、NFS以外にFUSEを利用するケースもある。FUSE（Filesystem in Userspace）はユーザー空間でファイルシステムを実装する仕組みで、クラウドストレージをファイルシステムのようにマウントできる。代表例として、GCPのCloud Storageをマウントする gcsfuse や、AWSのS3をマウントする s3fs がある。

#### ユーザー空間とカーネル空間
OSには大きく分けて二つの領域がある。
- カーネル空間: OSの中枢。メモリ管理やプロセス制御、デバイス操作などを担い、ハードウェアへ直接アクセスできる。
- ユーザー空間: 普通のアプリケーションが動く場所。ハードウェアには直接触れず、必要な処理は「システムコール」を通じてカーネルに依頼する。

通常のファイルシステム（ext4, xfs, NFSクライアントなど）は カーネル空間で動く。
一方でFUSEは「ファイルシステムをユーザー空間で実装できる仕組み」を提供する。

#### 比較
NFSとFUSEを比較すると、以下の観点で差分がある。

|観点|NFS（例: AWS EFS, GCP Filestore）|FUSE（例: gcsfuse, s3fs）|
|:----|:----|:----|
|実装場所|カーネル空間|ユーザー空間|
|性能・レイテンシ|高速・低レイテンシ。数十年の改善により高頻度I/Oや大量アクセスに強い|カーネル↔ユーザー空間の切り替えでオーバーヘッド大。小さなファイルや一覧取得で遅延が目立つ。NFSより数倍遅くなる例も|
|POSIX互換性|完全互換。ファイルロックやACL管理も可能。データベースやUNIXツールでも問題なし|制限あり。部分更新やファイルロックが苦手で、オブジェクト全体の再アップロードが必要になることも。アプリによっては正常動作しない|
|利用シーン|共有ディスクが必要な場合の第一候補。分析基盤、ML、ログ集中管理など性能と互換性を重視する用途|NFSを使えない環境（例: Cloud RunでCloud Storageを利用）や、独自FSの実験・簡易アクセス。手軽だが制約大|


まとめると、「環境が許すならNFSを、NFSが使えない状況ではFUSE系を検討」という使い分け。
例えば先述のCloud RunではFilestoreを直接使えないためgcsfuseを検討するが、GKEやEC2のように普通にNFSをマウントできる環境なら迷わずFilestoreやEFSの利用推奨。